// automatically generated by Xtext
grammar org.xtext.example.mydsl.anyfeatureadapted.MyDsl with org.eclipse.xtext.common.Terminals

import "http://example.com/example-with-anyfeatureadapted" 
import "http://www.eclipse.org/emf/2003/XMLType" as type
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

RootElementType returns RootElementType:
	'RootElementType'
	'{'
		'element1' element1=Element1
		('properties' properties=Properties)?
	'}';

AnyGenericConstruct returns AnyGenericConstruct:
	AnyGenericElement | AnyGenericText;

Element1 returns Element1:
	{Element1}
	'Element1'
	'{'
		('city' city=STRING)?
		('street' street=STRING)?
	'}';

Properties returns Properties:
	'Properties'
	'{'
		'anyGenericElem' '{' anyGenericElem+=AnyGenericConstruct ( "," anyGenericElem+=AnyGenericConstruct)* '}' 
	'}';

String0 returns type::String:
	'String' /* TODO: implement this rule and an appropriate IValueConverter */;

AnyGenericElement returns AnyGenericElement:
	{AnyGenericElement}
	'AnyGenericElement'
	'{'
		('elemName' elemName=STRING)?
		('elemValue' elemValue=STRING)?
		('anyGenericAttr' '{' anyGenericAttr+=AnyGenericAttribute ( "," anyGenericAttr+=AnyGenericAttribute)* '}' )?
		('childElem' '{' childElem+=AnyGenericElement ( "," childElem+=AnyGenericElement)* '}' )?
	'}';

AnyGenericText returns AnyGenericText:
	{AnyGenericText}
	'AnyGenericText'
	'{'
		('textValue' textValue=STRING)?
	'}';

AnyGenericAttribute returns AnyGenericAttribute:
	'AnyGenericAttribute'
	'{'
		'attrName' attrName=STRING
		'attrValue' attrValue=STRING
	'}';
