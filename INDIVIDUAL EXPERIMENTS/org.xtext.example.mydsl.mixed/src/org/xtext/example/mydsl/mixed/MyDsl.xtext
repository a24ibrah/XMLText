// automatically generated by Xtext
grammar org.xtext.example.mydsl.mixed.MyDsl with org.eclipse.xtext.common.Terminals

import "http://example.com/example-with-mixed" 
import "http://www.eclipse.org/emf/2003/XMLType" as type
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

ModelType returns ModelType:
	'ModelType'
	'{'
		'elements' '{' elements+=MyElement ( "," elements+=MyElement)* '}' 
	'}';

MyElement returns MyElement:
	MyElement_Impl | Pair | Pairs;

MyElement_Impl returns MyElement:
	{MyElement}
	'MyElement'
	;

Pair returns Pair:
	{Pair}
	'Pair'
	'{'
		('key' key=String0)?
		('value' value=String0)?
	'}';

Pairs returns Pairs:
	'Pairs'
	'{'
		'elements' '{' elements+=MyElement ( "," elements+=MyElement)* '}' 
	'}';

String0 returns type::String:
	'String' /* TODO: implement this rule and an appropriate IValueConverter */;

	//RootElementType returns RootElementType:
//	'RootElementType'
//	'{'
//		'element1' element1=MixedType
//		'element2' element2=CustomersType
//	'}';
//
//
//
//MixedType returns MixedType:
//	{MixedType}
//	'MixedType'
//	mixed+=Element+
//	;
//
//CustomersType returns CustomersType:
//	{CustomersType}
//	'CustomersType'
//	;
//
//Element:
//	Pair | Pairs
//;	
//
//Pair:
//	key=STRING ":" value=STRING
//;
//
//Pairs:
//	{Pairs}"(" elements+=Element* ")"
//;