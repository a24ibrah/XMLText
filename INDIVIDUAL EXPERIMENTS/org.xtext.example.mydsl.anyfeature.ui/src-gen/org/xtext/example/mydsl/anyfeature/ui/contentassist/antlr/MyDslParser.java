/*
* generated by Xtext
*/
package org.xtext.example.mydsl.anyfeature.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.mydsl.anyfeature.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {
	
	@Inject
	private MyDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.mydsl.anyfeature.ui.contentassist.antlr.internal.InternalMyDslParser createParser() {
		org.xtext.example.mydsl.anyfeature.ui.contentassist.antlr.internal.InternalMyDslParser result = new org.xtext.example.mydsl.anyfeature.ui.contentassist.antlr.internal.InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRootElementTypeAccess().getGroup(), "rule__RootElementType__Group__0");
					put(grammarAccess.getRootElementTypeAccess().getGroup_4(), "rule__RootElementType__Group_4__0");
					put(grammarAccess.getElement1Access().getGroup(), "rule__Element1__Group__0");
					put(grammarAccess.getElement1Access().getGroup_3(), "rule__Element1__Group_3__0");
					put(grammarAccess.getElement1Access().getGroup_4(), "rule__Element1__Group_4__0");
					put(grammarAccess.getPropertiesAccess().getGroup(), "rule__Properties__Group__0");
					put(grammarAccess.getRootElementTypeAccess().getElement1Assignment_3(), "rule__RootElementType__Element1Assignment_3");
					put(grammarAccess.getRootElementTypeAccess().getPropertiesAssignment_4_1(), "rule__RootElementType__PropertiesAssignment_4_1");
					put(grammarAccess.getElement1Access().getCityAssignment_3_1(), "rule__Element1__CityAssignment_3_1");
					put(grammarAccess.getElement1Access().getStreetAssignment_4_1(), "rule__Element1__StreetAssignment_4_1");
					put(grammarAccess.getPropertiesAccess().getAnyAssignment_2(), "rule__Properties__AnyAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.mydsl.anyfeature.ui.contentassist.antlr.internal.InternalMyDslParser typedParser = (org.xtext.example.mydsl.anyfeature.ui.contentassist.antlr.internal.InternalMyDslParser) parser;
			typedParser.entryRuleRootElementType();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
