/*
* generated by Xtext
*/
package org.xtext.example.mydsl.datatypes.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.mydsl.datatypes.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {
	
	@Inject
	private MyDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.mydsl.datatypes.ui.contentassist.antlr.internal.InternalMyDslParser createParser() {
		org.xtext.example.mydsl.datatypes.ui.contentassist.antlr.internal.InternalMyDslParser result = new org.xtext.example.mydsl.datatypes.ui.contentassist.antlr.internal.InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDataTypeTestAccess().getGroup(), "rule__DataTypeTest__Group__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_4(), "rule__DataTypeTest__Group_4__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_5(), "rule__DataTypeTest__Group_5__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_6(), "rule__DataTypeTest__Group_6__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_7(), "rule__DataTypeTest__Group_7__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_8(), "rule__DataTypeTest__Group_8__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_9(), "rule__DataTypeTest__Group_9__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_10(), "rule__DataTypeTest__Group_10__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_11(), "rule__DataTypeTest__Group_11__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_12(), "rule__DataTypeTest__Group_12__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_13(), "rule__DataTypeTest__Group_13__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_14(), "rule__DataTypeTest__Group_14__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_15(), "rule__DataTypeTest__Group_15__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_16(), "rule__DataTypeTest__Group_16__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_17(), "rule__DataTypeTest__Group_17__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_18(), "rule__DataTypeTest__Group_18__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_19(), "rule__DataTypeTest__Group_19__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_20(), "rule__DataTypeTest__Group_20__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_21(), "rule__DataTypeTest__Group_21__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_22(), "rule__DataTypeTest__Group_22__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_23(), "rule__DataTypeTest__Group_23__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_24(), "rule__DataTypeTest__Group_24__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_25(), "rule__DataTypeTest__Group_25__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_26(), "rule__DataTypeTest__Group_26__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_27(), "rule__DataTypeTest__Group_27__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_28(), "rule__DataTypeTest__Group_28__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_29(), "rule__DataTypeTest__Group_29__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_30(), "rule__DataTypeTest__Group_30__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_31(), "rule__DataTypeTest__Group_31__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_32(), "rule__DataTypeTest__Group_32__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_33(), "rule__DataTypeTest__Group_33__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_34(), "rule__DataTypeTest__Group_34__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_35(), "rule__DataTypeTest__Group_35__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_36(), "rule__DataTypeTest__Group_36__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_37(), "rule__DataTypeTest__Group_37__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_38(), "rule__DataTypeTest__Group_38__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_39(), "rule__DataTypeTest__Group_39__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_40(), "rule__DataTypeTest__Group_40__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_41(), "rule__DataTypeTest__Group_41__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_42(), "rule__DataTypeTest__Group_42__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_43(), "rule__DataTypeTest__Group_43__0");
					put(grammarAccess.getDataTypeTestAccess().getGroup_44(), "rule__DataTypeTest__Group_44__0");
					put(grammarAccess.getDataTypeTestAccess().getAIDAssignment_2(), "rule__DataTypeTest__AIDAssignment_2");
					put(grammarAccess.getDataTypeTestAccess().getAAnySimpleTypeAssignment_4_1(), "rule__DataTypeTest__AAnySimpleTypeAssignment_4_1");
					put(grammarAccess.getDataTypeTestAccess().getAAnyURIAssignment_5_1(), "rule__DataTypeTest__AAnyURIAssignment_5_1");
					put(grammarAccess.getDataTypeTestAccess().getABase64BinaryAssignment_6_1(), "rule__DataTypeTest__ABase64BinaryAssignment_6_1");
					put(grammarAccess.getDataTypeTestAccess().getABooleanAssignment_7_1(), "rule__DataTypeTest__ABooleanAssignment_7_1");
					put(grammarAccess.getDataTypeTestAccess().getAByteAssignment_8_1(), "rule__DataTypeTest__AByteAssignment_8_1");
					put(grammarAccess.getDataTypeTestAccess().getADateAssignment_9_1(), "rule__DataTypeTest__ADateAssignment_9_1");
					put(grammarAccess.getDataTypeTestAccess().getADateTimeAssignment_10_1(), "rule__DataTypeTest__ADateTimeAssignment_10_1");
					put(grammarAccess.getDataTypeTestAccess().getADecimalAssignment_11_1(), "rule__DataTypeTest__ADecimalAssignment_11_1");
					put(grammarAccess.getDataTypeTestAccess().getADoubleAssignment_12_1(), "rule__DataTypeTest__ADoubleAssignment_12_1");
					put(grammarAccess.getDataTypeTestAccess().getADurationAssignment_13_1(), "rule__DataTypeTest__ADurationAssignment_13_1");
					put(grammarAccess.getDataTypeTestAccess().getAEntitiesAssignment_14_1(), "rule__DataTypeTest__AEntitiesAssignment_14_1");
					put(grammarAccess.getDataTypeTestAccess().getAEntityAssignment_15_1(), "rule__DataTypeTest__AEntityAssignment_15_1");
					put(grammarAccess.getDataTypeTestAccess().getAFloatAssignment_16_1(), "rule__DataTypeTest__AFloatAssignment_16_1");
					put(grammarAccess.getDataTypeTestAccess().getAGDayAssignment_17_1(), "rule__DataTypeTest__AGDayAssignment_17_1");
					put(grammarAccess.getDataTypeTestAccess().getAGMonthAssignment_18_1(), "rule__DataTypeTest__AGMonthAssignment_18_1");
					put(grammarAccess.getDataTypeTestAccess().getAGMonthDayAssignment_19_1(), "rule__DataTypeTest__AGMonthDayAssignment_19_1");
					put(grammarAccess.getDataTypeTestAccess().getAGYearAssignment_20_1(), "rule__DataTypeTest__AGYearAssignment_20_1");
					put(grammarAccess.getDataTypeTestAccess().getAGYearMonthAssignment_21_1(), "rule__DataTypeTest__AGYearMonthAssignment_21_1");
					put(grammarAccess.getDataTypeTestAccess().getAHexBinaryAssignment_22_1(), "rule__DataTypeTest__AHexBinaryAssignment_22_1");
					put(grammarAccess.getDataTypeTestAccess().getAIDREFAssignment_23_1(), "rule__DataTypeTest__AIDREFAssignment_23_1");
					put(grammarAccess.getDataTypeTestAccess().getAIDREFSAssignment_24_1(), "rule__DataTypeTest__AIDREFSAssignment_24_1");
					put(grammarAccess.getDataTypeTestAccess().getAIntAssignment_25_1(), "rule__DataTypeTest__AIntAssignment_25_1");
					put(grammarAccess.getDataTypeTestAccess().getAIntegerAssignment_26_1(), "rule__DataTypeTest__AIntegerAssignment_26_1");
					put(grammarAccess.getDataTypeTestAccess().getALanguageAssignment_27_1(), "rule__DataTypeTest__ALanguageAssignment_27_1");
					put(grammarAccess.getDataTypeTestAccess().getALongAssignment_28_1(), "rule__DataTypeTest__ALongAssignment_28_1");
					put(grammarAccess.getDataTypeTestAccess().getANameAssignment_29_1(), "rule__DataTypeTest__ANameAssignment_29_1");
					put(grammarAccess.getDataTypeTestAccess().getANCNameAssignment_30_1(), "rule__DataTypeTest__ANCNameAssignment_30_1");
					put(grammarAccess.getDataTypeTestAccess().getANMTOKENAssignment_31_1(), "rule__DataTypeTest__ANMTOKENAssignment_31_1");
					put(grammarAccess.getDataTypeTestAccess().getANMTOKENSAssignment_32_1(), "rule__DataTypeTest__ANMTOKENSAssignment_32_1");
					put(grammarAccess.getDataTypeTestAccess().getANonNegativeIntegerAssignment_33_1(), "rule__DataTypeTest__ANonNegativeIntegerAssignment_33_1");
					put(grammarAccess.getDataTypeTestAccess().getANonPositiveIntegerAssignment_34_1(), "rule__DataTypeTest__ANonPositiveIntegerAssignment_34_1");
					put(grammarAccess.getDataTypeTestAccess().getAPositiveIntegerAssignment_35_1(), "rule__DataTypeTest__APositiveIntegerAssignment_35_1");
					put(grammarAccess.getDataTypeTestAccess().getAQNameAssignment_36_1(), "rule__DataTypeTest__AQNameAssignment_36_1");
					put(grammarAccess.getDataTypeTestAccess().getAShortAssignment_37_1(), "rule__DataTypeTest__AShortAssignment_37_1");
					put(grammarAccess.getDataTypeTestAccess().getAStringAssignment_38_1(), "rule__DataTypeTest__AStringAssignment_38_1");
					put(grammarAccess.getDataTypeTestAccess().getATimeAssignment_39_1(), "rule__DataTypeTest__ATimeAssignment_39_1");
					put(grammarAccess.getDataTypeTestAccess().getATokenAssignment_40_1(), "rule__DataTypeTest__ATokenAssignment_40_1");
					put(grammarAccess.getDataTypeTestAccess().getAUnsignedByteAssignment_41_1(), "rule__DataTypeTest__AUnsignedByteAssignment_41_1");
					put(grammarAccess.getDataTypeTestAccess().getAUnsignedIntAssignment_42_1(), "rule__DataTypeTest__AUnsignedIntAssignment_42_1");
					put(grammarAccess.getDataTypeTestAccess().getAUnsignedLongAssignment_43_1(), "rule__DataTypeTest__AUnsignedLongAssignment_43_1");
					put(grammarAccess.getDataTypeTestAccess().getAUnsignedShortAssignment_44_1(), "rule__DataTypeTest__AUnsignedShortAssignment_44_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.mydsl.datatypes.ui.contentassist.antlr.internal.InternalMyDslParser typedParser = (org.xtext.example.mydsl.datatypes.ui.contentassist.antlr.internal.InternalMyDslParser) parser;
			typedParser.entryRuleDataTypeTest();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
