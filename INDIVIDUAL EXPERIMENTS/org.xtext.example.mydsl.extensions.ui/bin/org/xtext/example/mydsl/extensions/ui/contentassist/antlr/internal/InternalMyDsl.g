/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.extensions.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.extensions.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.extensions.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleRootElementType
entryRuleRootElementType 
:
{ before(grammarAccess.getRootElementTypeRule()); }
	 ruleRootElementType
{ after(grammarAccess.getRootElementTypeRule()); } 
	 EOF 
;

// Rule RootElementType
ruleRootElementType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootElementTypeAccess().getGroup()); }
(rule__RootElementType__Group__0)
{ after(grammarAccess.getRootElementTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddress
entryRuleAddress 
:
{ before(grammarAccess.getAddressRule()); }
	 ruleAddress
{ after(grammarAccess.getAddressRule()); } 
	 EOF 
;

// Rule Address
ruleAddress
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddressAccess().getAlternatives()); }
(rule__Address__Alternatives)
{ after(grammarAccess.getAddressAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtendedAddress
entryRuleExtendedAddress 
:
{ before(grammarAccess.getExtendedAddressRule()); }
	 ruleExtendedAddress
{ after(grammarAccess.getExtendedAddressRule()); } 
	 EOF 
;

// Rule ExtendedAddress
ruleExtendedAddress
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendedAddressAccess().getGroup()); }
(rule__ExtendedAddress__Group__0)
{ after(grammarAccess.getExtendedAddressAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddress_Impl
entryRuleAddress_Impl 
:
{ before(grammarAccess.getAddress_ImplRule()); }
	 ruleAddress_Impl
{ after(grammarAccess.getAddress_ImplRule()); } 
	 EOF 
;

// Rule Address_Impl
ruleAddress_Impl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddress_ImplAccess().getGroup()); }
(rule__Address_Impl__Group__0)
{ after(grammarAccess.getAddress_ImplAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLanguage
entryRuleLanguage 
:
{ before(grammarAccess.getLanguageRule()); }
	 ruleLanguage
{ after(grammarAccess.getLanguageRule()); } 
	 EOF 
;

// Rule Language
ruleLanguage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLanguageAccess().getGroup()); }
(rule__Language__Group__0)
{ after(grammarAccess.getLanguageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleString0
entryRuleString0 
:
{ before(grammarAccess.getString0Rule()); }
	 ruleString0
{ after(grammarAccess.getString0Rule()); } 
	 EOF 
;

// Rule String0
ruleString0
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getString0Access().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getString0Access().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecimal
entryRuleDecimal 
:
{ before(grammarAccess.getDecimalRule()); }
	 ruleDecimal
{ after(grammarAccess.getDecimalRule()); } 
	 EOF 
;

// Rule Decimal
ruleDecimal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecimalAccess().getGroup()); }
(rule__Decimal__Group__0)
{ after(grammarAccess.getDecimalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLanguage0
entryRuleLanguage0 
:
{ before(grammarAccess.getLanguage0Rule()); }
	 ruleLanguage0
{ after(grammarAccess.getLanguage0Rule()); } 
	 EOF 
;

// Rule Language0
ruleLanguage0
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLanguage0Access().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getLanguage0Access().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Address__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddressAccess().getAddress_ImplParserRuleCall_0()); }
	ruleAddress_Impl
{ after(grammarAccess.getAddressAccess().getAddress_ImplParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAddressAccess().getExtendedAddressParserRuleCall_1()); }
	ruleExtendedAddress
{ after(grammarAccess.getAddressAccess().getExtendedAddressParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RootElementType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__0__Impl
	rule__RootElementType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getRootElementTypeKeyword_0()); }

	'RootElementType' 

{ after(grammarAccess.getRootElementTypeAccess().getRootElementTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__1__Impl
	rule__RootElementType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getRootElementTypeAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__2__Impl
	rule__RootElementType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getExtendedAddressKeyword_2()); }

	'extendedAddress' 

{ after(grammarAccess.getRootElementTypeAccess().getExtendedAddressKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__3__Impl
	rule__RootElementType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getExtendedAddressAssignment_3()); }
(rule__RootElementType__ExtendedAddressAssignment_3)
{ after(grammarAccess.getRootElementTypeAccess().getExtendedAddressAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__4__Impl
	rule__RootElementType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getAddressKeyword_4()); }

	'address' 

{ after(grammarAccess.getRootElementTypeAccess().getAddressKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__5__Impl
	rule__RootElementType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getAddressAssignment_5()); }
(rule__RootElementType__AddressAssignment_5)
{ after(grammarAccess.getRootElementTypeAccess().getAddressAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__6__Impl
	rule__RootElementType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getLanguageKeyword_6()); }

	'language' 

{ after(grammarAccess.getRootElementTypeAccess().getLanguageKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__7__Impl
	rule__RootElementType__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getLanguageAssignment_7()); }
(rule__RootElementType__LanguageAssignment_7)
{ after(grammarAccess.getRootElementTypeAccess().getLanguageAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getRootElementTypeAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ExtendedAddress__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group__0__Impl
	rule__ExtendedAddress__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getExtendedAddressKeyword_0()); }

	'ExtendedAddress' 

{ after(grammarAccess.getExtendedAddressAccess().getExtendedAddressKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group__1__Impl
	rule__ExtendedAddress__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getExtendedAddressAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group__2__Impl
	rule__ExtendedAddress__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getStreetKeyword_2()); }

	'street' 

{ after(grammarAccess.getExtendedAddressAccess().getStreetKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group__3__Impl
	rule__ExtendedAddress__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getStreetAssignment_3()); }
(rule__ExtendedAddress__StreetAssignment_3)
{ after(grammarAccess.getExtendedAddressAccess().getStreetAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group__4__Impl
	rule__ExtendedAddress__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getCityKeyword_4()); }

	'city' 

{ after(grammarAccess.getExtendedAddressAccess().getCityKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group__5__Impl
	rule__ExtendedAddress__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getCityAssignment_5()); }
(rule__ExtendedAddress__CityAssignment_5)
{ after(grammarAccess.getExtendedAddressAccess().getCityAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group__6__Impl
	rule__ExtendedAddress__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getCountryKeyword_6()); }

	'country' 

{ after(grammarAccess.getExtendedAddressAccess().getCountryKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group__7__Impl
	rule__ExtendedAddress__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getCountryAssignment_7()); }
(rule__ExtendedAddress__CountryAssignment_7)
{ after(grammarAccess.getExtendedAddressAccess().getCountryAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group__8__Impl
	rule__ExtendedAddress__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getGroup_8()); }
(rule__ExtendedAddress__Group_8__0)?
{ after(grammarAccess.getExtendedAddressAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group__9__Impl
	rule__ExtendedAddress__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getGroup_9()); }
(rule__ExtendedAddress__Group_9__0)?
{ after(grammarAccess.getExtendedAddressAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getExtendedAddressAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__ExtendedAddress__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group_8__0__Impl
	rule__ExtendedAddress__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getLatitudeKeyword_8_0()); }

	'latitude' 

{ after(grammarAccess.getExtendedAddressAccess().getLatitudeKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getLatitudeAssignment_8_1()); }
(rule__ExtendedAddress__LatitudeAssignment_8_1)
{ after(grammarAccess.getExtendedAddressAccess().getLatitudeAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtendedAddress__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group_9__0__Impl
	rule__ExtendedAddress__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getLongitudeKeyword_9_0()); }

	'longitude' 

{ after(grammarAccess.getExtendedAddressAccess().getLongitudeKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedAddress__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedAddress__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getLongitudeAssignment_9_1()); }
(rule__ExtendedAddress__LongitudeAssignment_9_1)
{ after(grammarAccess.getExtendedAddressAccess().getLongitudeAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Address_Impl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Address_Impl__Group__0__Impl
	rule__Address_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getAddressKeyword_0()); }

	'Address' 

{ after(grammarAccess.getAddress_ImplAccess().getAddressKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Address_Impl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Address_Impl__Group__1__Impl
	rule__Address_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getAddress_ImplAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Address_Impl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Address_Impl__Group__2__Impl
	rule__Address_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getStreetKeyword_2()); }

	'street' 

{ after(grammarAccess.getAddress_ImplAccess().getStreetKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Address_Impl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Address_Impl__Group__3__Impl
	rule__Address_Impl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getStreetAssignment_3()); }
(rule__Address_Impl__StreetAssignment_3)
{ after(grammarAccess.getAddress_ImplAccess().getStreetAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Address_Impl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Address_Impl__Group__4__Impl
	rule__Address_Impl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getCityKeyword_4()); }

	'city' 

{ after(grammarAccess.getAddress_ImplAccess().getCityKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Address_Impl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Address_Impl__Group__5__Impl
	rule__Address_Impl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getCityAssignment_5()); }
(rule__Address_Impl__CityAssignment_5)
{ after(grammarAccess.getAddress_ImplAccess().getCityAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Address_Impl__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Address_Impl__Group__6__Impl
	rule__Address_Impl__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getCountryKeyword_6()); }

	'country' 

{ after(grammarAccess.getAddress_ImplAccess().getCountryKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Address_Impl__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Address_Impl__Group__7__Impl
	rule__Address_Impl__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getCountryAssignment_7()); }
(rule__Address_Impl__CountryAssignment_7)
{ after(grammarAccess.getAddress_ImplAccess().getCountryAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Address_Impl__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Address_Impl__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getAddress_ImplAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Language__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__0__Impl
	rule__Language__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getLanguageAction_0()); }
(

)
{ after(grammarAccess.getLanguageAccess().getLanguageAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__1__Impl
	rule__Language__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getLanguageKeyword_1()); }

	'Language' 

{ after(grammarAccess.getLanguageAccess().getLanguageKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__2__Impl
	rule__Language__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getLanguageAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__3__Impl
	rule__Language__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getGroup_3()); }
(rule__Language__Group_3__0)?
{ after(grammarAccess.getLanguageAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__4__Impl
	rule__Language__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getGroup_4()); }
(rule__Language__Group_4__0)?
{ after(grammarAccess.getLanguageAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getLanguageAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Language__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group_3__0__Impl
	rule__Language__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getValueKeyword_3_0()); }

	'value' 

{ after(grammarAccess.getLanguageAccess().getValueKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getValueAssignment_3_1()); }
(rule__Language__ValueAssignment_3_1)
{ after(grammarAccess.getLanguageAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Language__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group_4__0__Impl
	rule__Language__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getLanguageKeyword_4_0()); }

	'language' 

{ after(grammarAccess.getLanguageAccess().getLanguageKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Language__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Language__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getLanguageAssignment_4_1()); }
(rule__Language__LanguageAssignment_4_1)
{ after(grammarAccess.getLanguageAccess().getLanguageAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Decimal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decimal__Group__0__Impl
	rule__Decimal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDecimalAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decimal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decimal__Group__1__Impl
	rule__Decimal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getDecimalAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decimal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decimal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getDecimalAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__RootElementType__ExtendedAddressAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getExtendedAddressExtendedAddressParserRuleCall_3_0()); }
	ruleExtendedAddress{ after(grammarAccess.getRootElementTypeAccess().getExtendedAddressExtendedAddressParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__AddressAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getAddressAddressParserRuleCall_5_0()); }
	ruleAddress{ after(grammarAccess.getRootElementTypeAccess().getAddressAddressParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__LanguageAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getLanguageLanguageParserRuleCall_7_0()); }
	ruleLanguage{ after(grammarAccess.getRootElementTypeAccess().getLanguageLanguageParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__StreetAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getStreetString0ParserRuleCall_3_0()); }
	ruleString0{ after(grammarAccess.getExtendedAddressAccess().getStreetString0ParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__CityAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getCityString0ParserRuleCall_5_0()); }
	ruleString0{ after(grammarAccess.getExtendedAddressAccess().getCityString0ParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__CountryAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getCountryString0ParserRuleCall_7_0()); }
	ruleString0{ after(grammarAccess.getExtendedAddressAccess().getCountryString0ParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__LatitudeAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getLatitudeDecimalParserRuleCall_8_1_0()); }
	ruleDecimal{ after(grammarAccess.getExtendedAddressAccess().getLatitudeDecimalParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedAddress__LongitudeAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedAddressAccess().getLongitudeDecimalParserRuleCall_9_1_0()); }
	ruleDecimal{ after(grammarAccess.getExtendedAddressAccess().getLongitudeDecimalParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__StreetAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getStreetString0ParserRuleCall_3_0()); }
	ruleString0{ after(grammarAccess.getAddress_ImplAccess().getStreetString0ParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__CityAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getCityString0ParserRuleCall_5_0()); }
	ruleString0{ after(grammarAccess.getAddress_ImplAccess().getCityString0ParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Address_Impl__CountryAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddress_ImplAccess().getCountryString0ParserRuleCall_7_0()); }
	ruleString0{ after(grammarAccess.getAddress_ImplAccess().getCountryString0ParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Language__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getValueString0ParserRuleCall_3_1_0()); }
	ruleString0{ after(grammarAccess.getLanguageAccess().getValueString0ParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Language__LanguageAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getLanguageLanguage0ParserRuleCall_4_1_0()); }
	ruleLanguage0{ after(grammarAccess.getLanguageAccess().getLanguageLanguage0ParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


