/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.anyfeature.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.anyfeature.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.anyfeature.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleRootElementType
entryRuleRootElementType 
:
{ before(grammarAccess.getRootElementTypeRule()); }
	 ruleRootElementType
{ after(grammarAccess.getRootElementTypeRule()); } 
	 EOF 
;

// Rule RootElementType
ruleRootElementType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootElementTypeAccess().getGroup()); }
(rule__RootElementType__Group__0)
{ after(grammarAccess.getRootElementTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElement1
entryRuleElement1 
:
{ before(grammarAccess.getElement1Rule()); }
	 ruleElement1
{ after(grammarAccess.getElement1Rule()); } 
	 EOF 
;

// Rule Element1
ruleElement1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElement1Access().getGroup()); }
(rule__Element1__Group__0)
{ after(grammarAccess.getElement1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperties
entryRuleProperties 
:
{ before(grammarAccess.getPropertiesRule()); }
	 ruleProperties
{ after(grammarAccess.getPropertiesRule()); } 
	 EOF 
;

// Rule Properties
ruleProperties
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertiesAccess().getGroup()); }
(rule__Properties__Group__0)
{ after(grammarAccess.getPropertiesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEFeatureMapEntry
entryRuleEFeatureMapEntry 
:
{ before(grammarAccess.getEFeatureMapEntryRule()); }
	 ruleEFeatureMapEntry
{ after(grammarAccess.getEFeatureMapEntryRule()); } 
	 EOF 
;

// Rule EFeatureMapEntry
ruleEFeatureMapEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEFeatureMapEntryAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getEFeatureMapEntryAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleString0
entryRuleString0 
:
{ before(grammarAccess.getString0Rule()); }
	 ruleString0
{ after(grammarAccess.getString0Rule()); } 
	 EOF 
;

// Rule String0
ruleString0
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getString0Access().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getString0Access().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RootElementType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__0__Impl
	rule__RootElementType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getRootElementTypeKeyword_0()); }

	'RootElementType' 

{ after(grammarAccess.getRootElementTypeAccess().getRootElementTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__1__Impl
	rule__RootElementType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getRootElementTypeAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__2__Impl
	rule__RootElementType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getElement1Keyword_2()); }

	'element1' 

{ after(grammarAccess.getRootElementTypeAccess().getElement1Keyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__3__Impl
	rule__RootElementType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getElement1Assignment_3()); }
(rule__RootElementType__Element1Assignment_3)
{ after(grammarAccess.getRootElementTypeAccess().getElement1Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__4__Impl
	rule__RootElementType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getGroup_4()); }
(rule__RootElementType__Group_4__0)?
{ after(grammarAccess.getRootElementTypeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getRootElementTypeAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RootElementType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group_4__0__Impl
	rule__RootElementType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getPropertiesKeyword_4_0()); }

	'properties' 

{ after(grammarAccess.getRootElementTypeAccess().getPropertiesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootElementType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootElementType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getPropertiesAssignment_4_1()); }
(rule__RootElementType__PropertiesAssignment_4_1)
{ after(grammarAccess.getRootElementTypeAccess().getPropertiesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Element1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element1__Group__0__Impl
	rule__Element1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getElement1Action_0()); }
(

)
{ after(grammarAccess.getElement1Access().getElement1Action_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element1__Group__1__Impl
	rule__Element1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getElement1Keyword_1()); }

	'Element1' 

{ after(grammarAccess.getElement1Access().getElement1Keyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element1__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element1__Group__2__Impl
	rule__Element1__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getElement1Access().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element1__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element1__Group__3__Impl
	rule__Element1__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getGroup_3()); }
(rule__Element1__Group_3__0)?
{ after(grammarAccess.getElement1Access().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element1__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element1__Group__4__Impl
	rule__Element1__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getGroup_4()); }
(rule__Element1__Group_4__0)?
{ after(grammarAccess.getElement1Access().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element1__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element1__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getElement1Access().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Element1__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element1__Group_3__0__Impl
	rule__Element1__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getCityKeyword_3_0()); }

	'city' 

{ after(grammarAccess.getElement1Access().getCityKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element1__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element1__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getCityAssignment_3_1()); }
(rule__Element1__CityAssignment_3_1)
{ after(grammarAccess.getElement1Access().getCityAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Element1__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element1__Group_4__0__Impl
	rule__Element1__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getStreetKeyword_4_0()); }

	'street' 

{ after(grammarAccess.getElement1Access().getStreetKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element1__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element1__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getStreetAssignment_4_1()); }
(rule__Element1__StreetAssignment_4_1)
{ after(grammarAccess.getElement1Access().getStreetAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Properties__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Properties__Group__0__Impl
	rule__Properties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesAccess().getPropertiesAction_0()); }
(

)
{ after(grammarAccess.getPropertiesAccess().getPropertiesAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Properties__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Properties__Group__1__Impl
	rule__Properties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesAccess().getPropertiesKeyword_1()); }

	'Properties' 

{ after(grammarAccess.getPropertiesAccess().getPropertiesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Properties__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Properties__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesAccess().getAnyAssignment_2()); }
(rule__Properties__AnyAssignment_2)?
{ after(grammarAccess.getPropertiesAccess().getAnyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__RootElementType__Element1Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getElement1Element1ParserRuleCall_3_0()); }
	ruleElement1{ after(grammarAccess.getRootElementTypeAccess().getElement1Element1ParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootElementType__PropertiesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootElementTypeAccess().getPropertiesPropertiesParserRuleCall_4_1_0()); }
	ruleProperties{ after(grammarAccess.getRootElementTypeAccess().getPropertiesPropertiesParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__CityAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getCityString0ParserRuleCall_3_1_0()); }
	ruleString0{ after(grammarAccess.getElement1Access().getCityString0ParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element1__StreetAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement1Access().getStreetString0ParserRuleCall_4_1_0()); }
	ruleString0{ after(grammarAccess.getElement1Access().getStreetString0ParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__AnyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertiesAccess().getAnyEFeatureMapEntryParserRuleCall_2_0()); }
	ruleEFeatureMapEntry{ after(grammarAccess.getPropertiesAccess().getAnyEFeatureMapEntryParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


