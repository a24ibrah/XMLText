/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.group.unchanged.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.group.unchanged.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.group.unchanged.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "RootElementType";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleRootElementType
entryRuleRootElementType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRootElementTypeRule()); }
	 iv_ruleRootElementType=ruleRootElementType 
	 { $current=$iv_ruleRootElementType.current; } 
	 EOF 
;

// Rule RootElementType
ruleRootElementType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RootElementType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRootElementTypeAccess().getRootElementTypeKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRootElementTypeAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='element1' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRootElementTypeAccess().getElement1Keyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRootElementTypeAccess().getElement1Element1ParserRuleCall_3_0()); 
	    }
		lv_element1_3_0=ruleElement1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootElementTypeRule());
	        }
       		set(
       			$current, 
       			"element1",
        		lv_element1_3_0, 
        		"Element1");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='element2' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRootElementTypeAccess().getElement2Keyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRootElementTypeAccess().getElement2Element2ParserRuleCall_5_0()); 
	    }
		lv_element2_5_0=ruleElement2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootElementTypeRule());
	        }
       		set(
       			$current, 
       			"element2",
        		lv_element2_5_0, 
        		"Element2");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='element3' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRootElementTypeAccess().getElement3Keyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRootElementTypeAccess().getElement3Element3ParserRuleCall_7_0()); 
	    }
		lv_element3_7_0=ruleElement3		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootElementTypeRule());
	        }
       		set(
       			$current, 
       			"element3",
        		lv_element3_7_0, 
        		"Element3");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRootElementTypeAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleElement1
entryRuleElement1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElement1Rule()); }
	 iv_ruleElement1=ruleElement1 
	 { $current=$iv_ruleElement1.current; } 
	 EOF 
;

// Rule Element1
ruleElement1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getElement1Access().getElement1Action_0(),
            $current);
    }
)	otherlv_1='Element1' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getElement1Access().getElement1Keyword_1());
    }
)
;





// Entry rule entryRuleElement2
entryRuleElement2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElement2Rule()); }
	 iv_ruleElement2=ruleElement2 
	 { $current=$iv_ruleElement2.current; } 
	 EOF 
;

// Rule Element2
ruleElement2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Element2' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getElement2Access().getElement2Keyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getElement2Access().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='modelGroupElement1' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getElement2Access().getModelGroupElement1Keyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getElement2Access().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement2Access().getModelGroupElement1String0ParserRuleCall_4_0()); 
	    }
		lv_modelGroupElement1_4_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement2Rule());
	        }
       		add(
       			$current, 
       			"modelGroupElement1",
        		lv_modelGroupElement1_4_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getElement2Access().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement2Access().getModelGroupElement1String0ParserRuleCall_5_1_0()); 
	    }
		lv_modelGroupElement1_6_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement2Rule());
	        }
       		add(
       			$current, 
       			"modelGroupElement1",
        		lv_modelGroupElement1_6_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getElement2Access().getRightCurlyBracketKeyword_6());
    }
	otherlv_8='modelGroupElement2' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getElement2Access().getModelGroupElement2Keyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement2Access().getModelGroupElement2String0ParserRuleCall_8_0()); 
	    }
		lv_modelGroupElement2_9_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement2Rule());
	        }
       		set(
       			$current, 
       			"modelGroupElement2",
        		lv_modelGroupElement2_9_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='modelGroupElement3' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getElement2Access().getModelGroupElement3Keyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement2Access().getModelGroupElement3String0ParserRuleCall_10_0()); 
	    }
		lv_modelGroupElement3_11_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement2Rule());
	        }
       		set(
       			$current, 
       			"modelGroupElement3",
        		lv_modelGroupElement3_11_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getElement2Access().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleElement3
entryRuleElement3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElement3Rule()); }
	 iv_ruleElement3=ruleElement3 
	 { $current=$iv_ruleElement3.current; } 
	 EOF 
;

// Rule Element3
ruleElement3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getElement3Access().getElement3Action_0(),
            $current);
    }
)	otherlv_1='Element3' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getElement3Access().getElement3Keyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getElement3Access().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='repeatableElement1' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getElement3Access().getRepeatableElement1Keyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getElement3Access().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement3Access().getRepeatableElement1String0ParserRuleCall_3_2_0()); 
	    }
		lv_repeatableElement1_5_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement3Rule());
	        }
       		add(
       			$current, 
       			"repeatableElement1",
        		lv_repeatableElement1_5_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getElement3Access().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement3Access().getRepeatableElement1String0ParserRuleCall_3_3_1_0()); 
	    }
		lv_repeatableElement1_7_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement3Rule());
	        }
       		add(
       			$current, 
       			"repeatableElement1",
        		lv_repeatableElement1_7_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getElement3Access().getRightCurlyBracketKeyword_3_4());
    }
)?(	otherlv_9='repeatableElement2' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getElement3Access().getRepeatableElement2Keyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement3Access().getRepeatableElement2String0ParserRuleCall_4_1_0()); 
	    }
		lv_repeatableElement2_10_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement3Rule());
	        }
       		set(
       			$current, 
       			"repeatableElement2",
        		lv_repeatableElement2_10_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='repeatableElement3' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getElement3Access().getRepeatableElement3Keyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement3Access().getRepeatableElement3String0ParserRuleCall_5_1_0()); 
	    }
		lv_repeatableElement3_12_0=ruleString0		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement3Rule());
	        }
       		set(
       			$current, 
       			"repeatableElement3",
        		lv_repeatableElement3_12_0, 
        		"String0");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getElement3Access().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleString0
entryRuleString0 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getString0Rule()); } 
	 iv_ruleString0=ruleString0 
	 { $current=$iv_ruleString0.current.getText(); }  
	 EOF 
;

// Rule String0
ruleString0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='String' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getString0Access().getStringKeyword()); 
    }

    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


